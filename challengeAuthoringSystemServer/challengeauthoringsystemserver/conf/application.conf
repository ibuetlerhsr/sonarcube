# This is the main configuration file for the application.
# ~~~~~

play.server.https.keyStore.path="conf/certs/sinv-56043.edu.hsr.ch.jks"
play.server.https.keyStore.path= ${?KEYSTORE_PATH}
play.server.https.keyStore.password="722?WaS?227server"
play.server.https.keyStore.password=${?KEYSTORE_PW}

play.http.parser.maxMemoryBuffer = 16384K

# Default database configuration
db {
  default.driver = com.mysql.cj.jdbc.Driver
  default.url = "jdbc:mysql://172.18.0.10:3306/challengeAuthoringSystemDB?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&verifyServerCertificate=false&useSSL=true"
  default.url = "jdbc:"${?DATABASE_URL}
  default.username = cas
  default.username = ${?DATABASE_USERNAME}
  default.password = "6rNhNAPY7yXf"
  default.password = ${?DATABASE_PASSWORD}

  # Provided for JPA access
  default.jndiName=DefaultDS
}

# Point JPA at our database configuration
jpa.default=defaultPersistenceUnit

# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
# db connections = ((physical_core_count * 2) + effective_spindle_count)
fixedConnectionPool = 9

# Set Hikari to fixed size
play.db {
  prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}

# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
ebean.default=["models.DatabaseObject.*"]

# Uncomment this for the most verbose Akka debugging:
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}


play.filters.csrf.bypassCorsTrustedOrigins = false
# https://www.playframework.com/documentation/latest/SecurityHeaders
# Connect to localhost:9000 for content security policy on websockets
play.filters.headers {
  contentSecurityPolicy = "connect-src 'self' ws://localhost:9000 wss://localhost:9000"
}

# https://www.playframework.com/documentation/latest/AllowedHostsFilter
# Allow requests to localhost:9000.
play.filters.hosts {
  allowed = ["localhost:9000", "localhost:3000", "localhost:3001"]
}

play.filters.contentSecurityPolicy = "default-src 'self';"

play.filters.enabled += "play.filters.cors.CORSFilter"

play.filters.cors {
  pathPrefixes = ["/"]
  allowedOrigins = ["localhost:3000", "localhost:3001"]
  allowedHttpMethods = ["GET", "POST", "OPTIONS"]
  preflightMaxAge = 3 days
  supportsCredentials = true
}

play.modules.enabled += "modules.ChallengeRepositoriesModule"
play.modules.enabled += "modules.MediaRepositoryModule"
play.modules.enabled += "modules.TranslationRepositoriesModule"
play.modules.enabled += "modules.UserRepositoriesModule"
play.modules.enabled += "modules.WebsocketModule"
play.modules.enabled += "modules.InitialDBStateModule"

play.http.secret.key = "MyF43RK:ByaZF`qKafp[icl;MD9ZP?O<KTh@ImswoKtG:1FP7o=i;k3`hIDX9xj@"

challengeDirectorySystem.challengeUrl = "https://hlcasdir-f0a5.restdb.io/rest/challenges"
challengeDirectorySystem.challengeUpdateUrl = "https://hlcasdir-f0a5.restdb.io/rest/challenges/(OBJECT_ID)"
challengeDirectorySystem.consumerUrlObject = "https://hlcasdir-f0a5.restdb.io/rest/ccs/(OBJECT_ID)"
challengeDirectorySystem.consumerUrl = "https://hlcasdir-f0a5.restdb.io/rest/ccs"
challengedirectorysystem.apiKey = "2b97bfd9618668447a633e068be67834c2f5d"
challengeImport.apiKey = "465944f2-3641-4640-ae9b-79f740552712"

domain.value = "hl.ygubler.ch"
domain.value = ${?DOMAIN}
casClient.origin = "https://cas-eu.idocker.hacking-lab.com, https://cas-client.hl.ygubler.ch"
casConsumer.origin = "https://ccs_mit.idocker.hacking-lab.com, https://ccs_infsi3.idocker.hacking-lab.com, https://ccs_hackyeaster.idocker.hacking-lab.com, https://ccs-test.hl.ygubler.ch"
authorized.editorRoles = "hl_editor"
authorized.editorRoles = ${?EDITOR_ROLES}
authorized.translatorRoles = "hl_translator"
authorized.translatorRoles = ${?TRANSLATOR_ROLES}
authorized.defaultRoles = "hl_user"
authorized.defaultRoles = ${?USER_ROLES}
authorized.adminRoles = "hl_admin"
authorized.adminRoles = ${?ADMIN_ROLES}
